# This is a basic workflow to help you get started with Actions

name: ðŸš€ Deploy website on push

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'site/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  web-deploy:
    name: ðŸŽ‰ Deploy
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: ðŸšš Get latest code
        uses: actions/checkout@v2.3.4
        
      # Install all dependencies
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install
        
      # Get timestamp to be used in next step
      - name: âŒš Get timestamp
        uses: srfrnk/current-time@master
        id: timestamp
        with:
          format: YYYYMMDDhhmmss
      
      # Set index.html cacheId
      - name: ðŸ”ƒ Replace tokens
        uses: cschleiden/replace-tokens@v1.0
        with:
          tokenPrefix: '{'
          tokenSuffix: '}'
          files: '["**/index.html"]'
        env:
            cacheId: "${{ steps.timestamp.outputs.formattedTime }}"
            
      # Copy needed files to deploy folder
      - name: ðŸ“‚ Copy src and node_modules to site folder
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          ls
          cp ./src /site -r
          cp ./node_modules /site -r
        
      # Deploy files to server
      - name: ðŸŒŽ Deploy to server
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.ftp_server }}
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          local-dir: "site/"
          server-dir: ${{ secrets.server_dir }}
          
